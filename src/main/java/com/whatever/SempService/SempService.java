
package com.whatever.SempService;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b14002
 * Generated source version: 2.1
 * 
 */
@WebService(name = "sempService", targetNamespace = "urn:Vidal")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SempService {


    /**
     * 
     * @param sempId
     * @return
     *     returns com.whatever.SempService.ArrayOfSemp
     */
    @WebMethod
    @WebResult(name = "sempList", targetNamespace = "urn:Vidal")
    @RequestWrapper(localName = "getChildren", targetNamespace = "urn:Vidal", className = "com.whatever.SempService.GetChildren")
    @ResponseWrapper(localName = "getChildrenResponse", targetNamespace = "urn:Vidal", className = "com.whatever.SempService.GetChildrenResponse")
    public ArrayOfSemp getChildren(
        @WebParam(name = "sempId", targetNamespace = "urn:Vidal")
        Integer sempId);

    /**
     * 
     * @param sempId
     * @return
     *     returns com.whatever.SempService.Semp
     */
    @WebMethod
    @WebResult(name = "semp", targetNamespace = "urn:Vidal")
    @RequestWrapper(localName = "getParent", targetNamespace = "urn:Vidal", className = "com.whatever.SempService.GetParent")
    @ResponseWrapper(localName = "getParentResponse", targetNamespace = "urn:Vidal", className = "com.whatever.SempService.GetParentResponse")
    public Semp getParent(
        @WebParam(name = "sempId", targetNamespace = "urn:Vidal")
        Integer sempId);

    /**
     * 
     * @return
     *     returns com.whatever.SempService.Semp
     */
    @WebMethod
    @WebResult(name = "semp", targetNamespace = "urn:Vidal")
    @RequestWrapper(localName = "getRootNode", targetNamespace = "urn:Vidal", className = "com.whatever.SempService.GetRootNode")
    @ResponseWrapper(localName = "getRootNodeResponse", targetNamespace = "urn:Vidal", className = "com.whatever.SempService.GetRootNodeResponse")
    public Semp getRootNode();

    /**
     * 
     * @param sempId
     * @return
     *     returns com.whatever.SempService.Semp
     */
    @WebMethod
    @WebResult(name = "semp", targetNamespace = "urn:Vidal")
    @RequestWrapper(localName = "searchById", targetNamespace = "urn:Vidal", className = "com.whatever.SempService.SearchById")
    @ResponseWrapper(localName = "searchByIdResponse", targetNamespace = "urn:Vidal", className = "com.whatever.SempService.SearchByIdResponse")
    public Semp searchById(
        @WebParam(name = "sempId", targetNamespace = "urn:Vidal")
        Integer sempId);

    /**
     * 
     * @param name
     * @return
     *     returns com.whatever.SempService.ArrayOfSemp
     */
    @WebMethod
    @WebResult(name = "sempList", targetNamespace = "urn:Vidal")
    @RequestWrapper(localName = "searchByName", targetNamespace = "urn:Vidal", className = "com.whatever.SempService.SearchByName")
    @ResponseWrapper(localName = "searchByNameResponse", targetNamespace = "urn:Vidal", className = "com.whatever.SempService.SearchByNameResponse")
    public ArrayOfSemp searchByName(
        @WebParam(name = "name", targetNamespace = "urn:Vidal")
        String name);

    /**
     * 
     * @param productId
     * @return
     *     returns com.whatever.SempService.ArrayOfSemp
     */
    @WebMethod
    @WebResult(name = "sempList", targetNamespace = "urn:Vidal")
    @RequestWrapper(localName = "searchByProductId", targetNamespace = "urn:Vidal", className = "com.whatever.SempService.SearchByProductId")
    @ResponseWrapper(localName = "searchByProductIdResponse", targetNamespace = "urn:Vidal", className = "com.whatever.SempService.SearchByProductIdResponse")
    public ArrayOfSemp searchByProductId(
        @WebParam(name = "productId", targetNamespace = "urn:Vidal")
        Integer productId);

}
