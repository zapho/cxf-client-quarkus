
package com.whatever.UcdService;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b14002
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "UcdService", targetNamespace = "urn:Vidal", wsdlLocation = "file:/D:/dev/SourceRepoAlt/agfa/sdb-connectors/fr/vidal/trunk/src/main/resources/wsdl/UcdService.wsdl")
public class UcdService_Service
    extends Service
{

    private final static URL UCDSERVICE_WSDL_LOCATION;
    private final static WebServiceException UCDSERVICE_EXCEPTION;
    private final static QName UCDSERVICE_QNAME = new QName("urn:Vidal", "UcdService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/D:/dev/SourceRepoAlt/agfa/sdb-connectors/fr/vidal/trunk/src/main/resources/wsdl/UcdService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        UCDSERVICE_WSDL_LOCATION = url;
        UCDSERVICE_EXCEPTION = e;
    }

    public UcdService_Service() {
        super(__getWsdlLocation(), UCDSERVICE_QNAME);
    }

    public UcdService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    /**
     * 
     * @return
     *     returns UcdService
     */
    @WebEndpoint(name = "UcdServiceHttpPort")
    public UcdService getUcdServiceHttpPort() {
        return super.getPort(new QName("urn:Vidal", "UcdServiceHttpPort"), UcdService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UcdService
     */
    @WebEndpoint(name = "UcdServiceHttpPort")
    public UcdService getUcdServiceHttpPort(WebServiceFeature... features) {
        return super.getPort(new QName("urn:Vidal", "UcdServiceHttpPort"), UcdService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (UCDSERVICE_EXCEPTION!= null) {
            throw UCDSERVICE_EXCEPTION;
        }
        return UCDSERVICE_WSDL_LOCATION;
    }

}
