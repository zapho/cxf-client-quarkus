
package com.whatever.DrugPrescriptionAnalysisService;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b14002
 * Generated source version: 2.1
 * 
 */
@WebService(name = "drugPrescriptionAnalysisService", targetNamespace = "urn:Vidal")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DrugPrescriptionAnalysisService {


    /**
     * 
     * @param type
     * @param value
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "commentsToJson", targetNamespace = "urn:Vidal")
    @RequestWrapper(localName = "commentsToJson", targetNamespace = "urn:Vidal", className = "com.whatever.DrugPrescriptionAnalysisService.CommentsToJson")
    @ResponseWrapper(localName = "commentsToJsonResponse", targetNamespace = "urn:Vidal", className = "com.whatever.DrugPrescriptionAnalysisService.CommentsToJsonResponse")
    public String commentsToJson(
        @WebParam(name = "type", targetNamespace = "urn:Vidal")
        CommentType type,
        @WebParam(name = "value", targetNamespace = "urn:Vidal")
        String value);

    /**
     * 
     * @param dose
     * @param unitId
     * @param intervalMin
     * @param intervalMax
     * @param intervalUnitId
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "dosageToJson", targetNamespace = "urn:Vidal")
    @RequestWrapper(localName = "dosageFromObjToJson", targetNamespace = "urn:Vidal", className = "com.whatever.DrugPrescriptionAnalysisService.DosageFromObjToJson")
    @ResponseWrapper(localName = "dosageFromObjToJsonResponse", targetNamespace = "urn:Vidal", className = "com.whatever.DrugPrescriptionAnalysisService.DosageFromObjToJsonResponse")
    public String dosageFromObjToJson(
        @WebParam(name = "dose", targetNamespace = "urn:Vidal")
        Double dose,
        @WebParam(name = "unitId", targetNamespace = "urn:Vidal")
        Integer unitId,
        @WebParam(name = "intervalMin", targetNamespace = "urn:Vidal")
        Integer intervalMin,
        @WebParam(name = "intervalMax", targetNamespace = "urn:Vidal")
        Integer intervalMax,
        @WebParam(name = "intervalUnitId", targetNamespace = "urn:Vidal")
        Integer intervalUnitId);

    /**
     * 
     * @param prescriptionLineList
     * @param comments
     * @param patient
     * @param alertOutputList
     * @return
     *     returns com.whatever.DrugPrescriptionAnalysisService.PrescriptionAnalysisFull
     */
    @WebMethod
    @WebResult(name = "getAlertsFullWithComments", targetNamespace = "urn:Vidal")
    @RequestWrapper(localName = "getAlertsFullWithComments", targetNamespace = "urn:Vidal", className = "com.whatever.DrugPrescriptionAnalysisService.GetAlertsFullWithComments")
    @ResponseWrapper(localName = "getAlertsFullWithCommentsResponse", targetNamespace = "urn:Vidal", className = "com.whatever.DrugPrescriptionAnalysisService.GetAlertsFullWithCommentsResponse")
    public PrescriptionAnalysisFull getAlertsFullWithComments(
        @WebParam(name = "patient", targetNamespace = "urn:Vidal")
        String patient,
        @WebParam(name = "prescriptionLineList", targetNamespace = "urn:Vidal")
        ArrayOfString prescriptionLineList,
        @WebParam(name = "comments", targetNamespace = "urn:Vidal")
        ArrayOfString comments,
        @WebParam(name = "alertOutputList", targetNamespace = "urn:Vidal")
        ArrayOfAlertOutput alertOutputList);

    /**
     * 
     * @param types
     * @param prescriptionLineList
     * @param patient
     * @return
     *     returns com.whatever.DrugPrescriptionAnalysisService.PrescriptionAnalysis
     */
    @WebMethod
    @WebResult(name = "getAlertsWithAlertTypes", targetNamespace = "urn:Vidal")
    @RequestWrapper(localName = "getAlertsWithAlertTypes", targetNamespace = "urn:Vidal", className = "com.whatever.DrugPrescriptionAnalysisService.GetAlertsWithAlertTypes")
    @ResponseWrapper(localName = "getAlertsWithAlertTypesResponse", targetNamespace = "urn:Vidal", className = "com.whatever.DrugPrescriptionAnalysisService.GetAlertsWithAlertTypesResponse")
    public PrescriptionAnalysis getAlertsWithAlertTypes(
        @WebParam(name = "patient", targetNamespace = "urn:Vidal")
        String patient,
        @WebParam(name = "prescriptionLineList", targetNamespace = "urn:Vidal")
        ArrayOfString prescriptionLineList,
        @WebParam(name = "types", targetNamespace = "urn:Vidal")
        ArrayOfAlertType types);

    /**
     * 
     * @return
     *     returns com.whatever.DrugPrescriptionAnalysisService.ArrayOfAlert
     */
    @WebMethod
    @WebResult(name = "getAllSadmAlerts", targetNamespace = "urn:Vidal")
    @RequestWrapper(localName = "getAllSadmAlerts", targetNamespace = "urn:Vidal", className = "com.whatever.DrugPrescriptionAnalysisService.GetAllSadmAlerts")
    @ResponseWrapper(localName = "getAllSadmAlertsResponse", targetNamespace = "urn:Vidal", className = "com.whatever.DrugPrescriptionAnalysisService.GetAllSadmAlertsResponse")
    public ArrayOfAlert getAllSadmAlerts();

    /**
     * 
     * @param prescriptionLines
     * @return
     *     returns com.whatever.DrugPrescriptionAnalysisService.PrescriptionCostAnalysis
     */
    @WebMethod
    @WebResult(name = "prescriptionCostAnalysis", targetNamespace = "urn:Vidal")
    @RequestWrapper(localName = "getPrescriptionCostAnalysis", targetNamespace = "urn:Vidal", className = "com.whatever.DrugPrescriptionAnalysisService.GetPrescriptionCostAnalysis")
    @ResponseWrapper(localName = "getPrescriptionCostAnalysisResponse", targetNamespace = "urn:Vidal", className = "com.whatever.DrugPrescriptionAnalysisService.GetPrescriptionCostAnalysisResponse")
    public PrescriptionCostAnalysis getPrescriptionCostAnalysis(
        @WebParam(name = "prescriptionLines", targetNamespace = "urn:Vidal")
        ArrayOfString prescriptionLines);

    /**
     * 
     * @param breastFeedingStartDate
     * @param creatin
     * @param hepaticInsufficiency
     * @param gender
     * @param weeksOfAmenorrhea
     * @param weight
     * @param dateOfBirth
     * @param pathologyCim10IdList
     * @param moleculeIdList
     * @param allergyIdList
     * @param height
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "patientFromObjToJson2018", targetNamespace = "urn:Vidal")
    @RequestWrapper(localName = "patientFromObjToJson2018", targetNamespace = "urn:Vidal", className = "com.whatever.DrugPrescriptionAnalysisService.PatientFromObjToJson2018")
    @ResponseWrapper(localName = "patientFromObjToJson2018Response", targetNamespace = "urn:Vidal", className = "com.whatever.DrugPrescriptionAnalysisService.PatientFromObjToJson2018Response")
    public String patientFromObjToJson2018(
        @WebParam(name = "dateOfBirth", targetNamespace = "urn:Vidal")
        XMLGregorianCalendar dateOfBirth,
        @WebParam(name = "gender", targetNamespace = "urn:Vidal")
        Gender gender,
        @WebParam(name = "weight", targetNamespace = "urn:Vidal")
        Double weight,
        @WebParam(name = "height", targetNamespace = "urn:Vidal")
        Double height,
        @WebParam(name = "weeksOfAmenorrhea", targetNamespace = "urn:Vidal")
        Integer weeksOfAmenorrhea,
        @WebParam(name = "breastFeedingStartDate", targetNamespace = "urn:Vidal")
        XMLGregorianCalendar breastFeedingStartDate,
        @WebParam(name = "creatin", targetNamespace = "urn:Vidal")
        Integer creatin,
        @WebParam(name = "hepaticInsufficiency", targetNamespace = "urn:Vidal")
        HepaticInsufficiency hepaticInsufficiency,
        @WebParam(name = "allergyIdList", targetNamespace = "urn:Vidal")
        ArrayOfInt allergyIdList,
        @WebParam(name = "moleculeIdList", targetNamespace = "urn:Vidal")
        ArrayOfInt moleculeIdList,
        @WebParam(name = "pathologyCim10IdList", targetNamespace = "urn:Vidal")
        ArrayOfInt pathologyCim10IdList);

    /**
     * 
     * @param indicationIdList
     * @param dosageList
     * @param endDate
     * @param routeIdList
     * @param lineGroupId
     * @param lineGroupType
     * @param drugType
     * @param durationType
     * @param aldCode
     * @param duration
     * @param lineStatus
     * @param dose
     * @param frequencyType
     * @param ald
     * @param unitId
     * @param drugId
     * @param startDate
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "prescriptionLineFromObjToJson2018", targetNamespace = "urn:Vidal")
    @RequestWrapper(localName = "prescriptionLineFromObjToJson2018", targetNamespace = "urn:Vidal", className = "com.whatever.DrugPrescriptionAnalysisService.PrescriptionLineFromObjToJson2018")
    @ResponseWrapper(localName = "prescriptionLineFromObjToJson2018Response", targetNamespace = "urn:Vidal", className = "com.whatever.DrugPrescriptionAnalysisService.PrescriptionLineFromObjToJson2018Response")
    public String prescriptionLineFromObjToJson2018(
        @WebParam(name = "dose", targetNamespace = "urn:Vidal")
        Double dose,
        @WebParam(name = "unitId", targetNamespace = "urn:Vidal")
        Integer unitId,
        @WebParam(name = "frequencyType", targetNamespace = "urn:Vidal")
        PosologyFrequencyType frequencyType,
        @WebParam(name = "indicationIdList", targetNamespace = "urn:Vidal")
        ArrayOfInt indicationIdList,
        @WebParam(name = "routeIdList", targetNamespace = "urn:Vidal")
        ArrayOfInt routeIdList,
        @WebParam(name = "drugId", targetNamespace = "urn:Vidal")
        Integer drugId,
        @WebParam(name = "drugType", targetNamespace = "urn:Vidal")
        DrugType drugType,
        @WebParam(name = "duration", targetNamespace = "urn:Vidal")
        Integer duration,
        @WebParam(name = "durationType", targetNamespace = "urn:Vidal")
        DurationType durationType,
        @WebParam(name = "dosageList", targetNamespace = "urn:Vidal")
        ArrayOfString dosageList,
        @WebParam(name = "ald", targetNamespace = "urn:Vidal")
        Boolean ald,
        @WebParam(name = "aldCode", targetNamespace = "urn:Vidal")
        String aldCode,
        @WebParam(name = "startDate", targetNamespace = "urn:Vidal")
        XMLGregorianCalendar startDate,
        @WebParam(name = "endDate", targetNamespace = "urn:Vidal")
        XMLGregorianCalendar endDate,
        @WebParam(name = "lineStatus", targetNamespace = "urn:Vidal")
        LineStatus lineStatus,
        @WebParam(name = "lineGroupId", targetNamespace = "urn:Vidal")
        Integer lineGroupId,
        @WebParam(name = "lineGroupType", targetNamespace = "urn:Vidal")
        LineGroupType lineGroupType);

    /**
     * 
     * @param prescriptionLineList
     * @param patient
     * @return
     *     returns com.whatever.DrugPrescriptionAnalysisService.ArrayOfCodedReco
     */
    @WebMethod
    @WebResult(name = "recos", targetNamespace = "urn:Vidal")
    @RequestWrapper(localName = "searchRecosByPrescriptions", targetNamespace = "urn:Vidal", className = "com.whatever.DrugPrescriptionAnalysisService.SearchRecosByPrescriptions")
    @ResponseWrapper(localName = "searchRecosByPrescriptionsResponse", targetNamespace = "urn:Vidal", className = "com.whatever.DrugPrescriptionAnalysisService.SearchRecosByPrescriptionsResponse")
    public ArrayOfCodedReco searchRecosByPrescriptions(
        @WebParam(name = "patient", targetNamespace = "urn:Vidal")
        String patient,
        @WebParam(name = "prescriptionLineList", targetNamespace = "urn:Vidal")
        ArrayOfString prescriptionLineList);

}
