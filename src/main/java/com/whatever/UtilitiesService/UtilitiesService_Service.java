
package com.whatever.UtilitiesService;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "UtilitiesService", targetNamespace = "urn:Vidal", wsdlLocation = "http://bodswv019.agfahealthcare.com:8011/merlin-service/services/UtilitiesService?wsdl")
public class UtilitiesService_Service
    extends Service
{

    private final static URL UTILITIESSERVICE_WSDL_LOCATION;
    private final static WebServiceException UTILITIESSERVICE_EXCEPTION;
    private final static QName UTILITIESSERVICE_QNAME = new QName("urn:Vidal", "UtilitiesService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://bodswv019.agfahealthcare.com:8011/merlin-service/services/UtilitiesService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        UTILITIESSERVICE_WSDL_LOCATION = url;
        UTILITIESSERVICE_EXCEPTION = e;
    }

    public UtilitiesService_Service() {
        super(__getWsdlLocation(), UTILITIESSERVICE_QNAME);
    }

    public UtilitiesService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    /**
     * 
     * @return
     *     returns UtilitiesService
     */
    @WebEndpoint(name = "UtilitiesServiceHttpPort")
    public UtilitiesService getUtilitiesServiceHttpPort() {
        return super.getPort(new QName("urn:Vidal", "UtilitiesServiceHttpPort"), UtilitiesService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UtilitiesService
     */
    @WebEndpoint(name = "UtilitiesServiceHttpPort")
    public UtilitiesService getUtilitiesServiceHttpPort(WebServiceFeature... features) {
        return super.getPort(new QName("urn:Vidal", "UtilitiesServiceHttpPort"), UtilitiesService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (UTILITIESSERVICE_EXCEPTION!= null) {
            throw UTILITIESSERVICE_EXCEPTION;
        }
        return UTILITIESSERVICE_WSDL_LOCATION;
    }

}
